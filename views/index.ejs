<!DOCTYPE html>
<html>

<head>
	<h1>IMU Sensor Values</h1>
</head>

<body>
	<h2>Result:</h2>
	<div class = "result" style="width: 200px; height: 20px">
		<p class="result_msg">Standby</p>
	</div>
	<!-- <h2>Accelerometer</h2>
	<h3>ax:</h3>
	<div class = "ax" style="width: 200px; height: 20px; color: white;">
		ax
	</div>
	<h3>ay:</h3>
	<div class = "ay" style="width: 200px; height: 20px; color: white;">
		ay
	</div>
	<h3>az:</h3>
	<div class = "az" style="width: 200px; height: 20px; color: white;">
		az
	</div>
	<h2>Gyroscope</h2>
	<h3>gx:</h3>
	<div class = "gx" style="width: 200px; height: 20px; color: white;">
		gx
	</div>
	<h3>gy:</h3>
	<div class = "gy" style="width: 200px; height: 20px; color: white;">
		gy
	</div>
	<h3>gz:</h3>
	<div class = "gz" style="width: 200px; height: 20px; color: white;">
		gz
	</div> -->

	<div style="width: 200px; height: 20px; color: white;"></div>

	<div class="workouts">
		<button onclick="selectWorkout(0)" style="background-color: lightgreen;" class="bicep">
			Bicep Curls
		</button>
		<button onclick="selectWorkout(3)" style="background-color: lightgray;" class="jack">
			Jumping Jacks
		</button>
	</div>

	<div style="width: 200px; height: 20px; color: white;"></div>

	<div>
		<button onclick="activate()" style="background-color: lightgray;" class="starter">
			Start
		</button>
	</div>

</body>

<script src="https://d3js.org/d3.v7.min.js"></script>

<script type="application/javascript">

	const SERVERADDRESS = "http://127.0.0.1:3000"
	const workoutDescriptors = {
		0: ".bicep",
		1: "",
		2: "",
		3: ".jack",
		4: "",
		5: "",
	}

	let sensorData = [['time', 'ax', 'ay', 'az', 'gx', 'gy', 'gz']];
	let readSet = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
	let currentWorkout = 0;
	let active = false;
	let time = 0.0;

	// use XML HTTP request to grab data from the server (central)
	let xmlhttp = new XMLHttpRequest()
	xmlhttp.onreadystatechange = function () {
		if (xmlhttp.readyState == 4 && xmlhttp.status == 200 && active) {
			let responseText = xmlhttp.responseText;
			let descriptor = responseText.descriptor;
			
			readSet[0] = time;
			readSet[1] = parseFloat(JSON.parse(responseText).ax);
			readSet[2] = parseFloat(JSON.parse(responseText).ay);
			readSet[3] = parseFloat(JSON.parse(responseText).az);
			readSet[4] = parseFloat(JSON.parse(responseText).gx);
			readSet[5] = parseFloat(JSON.parse(responseText).gy);
			readSet[6] = parseFloat(JSON.parse(responseText).gz);

			sensorData.push(readSet.join(','));

			// if(sensorData.length % 1000 == 0){
			// 	download();
			// }
		}
	}

	function activate(){
		if(active){
			d3.select(".starter").style("background-color", "lightgray");
			d3.select(".starter").text("Start");
			active = false;
			download();
			time = 0.0;
		}
		else{
			d3.select(".starter").style("background-color", "lightgreen");
			d3.select(".starter").text("Stop");
			active = true;
		}
	}

	function timeIncrement(){
		if(active){
			time += 0.1;
		}
	}

	function selectWorkout(mode){
		d3.select(workoutDescriptors[currentWorkout]).style("background-color", "lightgray");
		currentWorkout = mode;

		d3.select(workoutDescriptors[currentWorkout]).style("background-color", "lightgreen");
	}

	function fail(){
		d3.select(".result_msg").text("FAILURE");
		d3.select(".result").style("background-color", "red");
	}

	function success(){
		d3.select(".result_msg").text("SUCCESS");
		d3.select(".result").style("background-color", "green");
	}

	function download(){
		const blob = new Blob([sensorData.join('\n')], { type: 'text/csv' }); 
  
		// Creating an object for downloading url 
		const url = window.URL.createObjectURL(blob) 
		
		// Creating an anchor(a) tag of HTML 
		const a = document.createElement('a') 

		// Passing the blob downloading url  
		a.setAttribute('href', url) 

		// Setting the anchor tag attribute for downloading 
		// and passing the download file name 
		a.setAttribute('download', 'imu_data.csv'); 
		a.click();

		sensorData = [['ax', 'ay', 'az', 'gx', 'gy', 'gz']];
	}

	// periodically grab data
	let getData = () => {
		xmlhttp.open("POST", SERVERADDRESS, true)
		xmlhttp.setRequestHeader("Content-type", "application/json")
		xmlhttp.send("")
		setTimeout(() => {
			getData()
		}, 100)
	}

	setInterval(timeIncrement, 100);
	getData()

</script>

</html>